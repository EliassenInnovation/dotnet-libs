openapi: 3.0.1
info:
  title: Eliassen.AspNetCore.Mvc
  version: 1.0.0.0
paths:
  /api/Blog/Blogs:
    post:
      tags:
        - Blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Blog.Contracts.Models.Filters.BlogsFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Blog.Contracts.Models.Filters.BlogsFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Blog.Contracts.Models.Filters.BlogsFilter'
      responses:
        '200':
          description: Success
      deprecated: true
      x-permissions:
        anonymous: true
  '/api/Blog/Slug/{id}':
    get:
      tags:
        - Blog
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: true
  '/api/Blog/RecentBlogs/{id}':
    get:
      tags:
        - Blog
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: true
  /api/Blog/Query:
    post:
      tags:
        - Blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Eliassen.System.Linq.Search.SearchQuery-Nucleus.Blog.Contracts.Models.BlogModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Eliassen.System.Linq.Search.SearchQuery-Nucleus.Blog.Contracts.Models.BlogModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Blog.Contracts.Models.BlogModel'
            application/json:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Blog.Contracts.Models.BlogModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Blog.Contracts.Models.BlogModel'
      x-permissions:
        anonymous: true
  /api/BlogAdmin/Blogs:
    post:
      tags:
        - BlogAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Blog.Contracts.Models.Filters.BlogsFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Blog.Contracts.Models.Filters.BlogsFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Blog.Contracts.Models.Filters.BlogsFilter'
      responses:
        '200':
          description: Success
      deprecated: true
      x-permissions:
        anonymous: false
        right:
          - right_blog_admin
  '/api/BlogAdmin/Blog/{id}':
    get:
      tags:
        - BlogAdmin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: false
        right:
          - right_blog_admin
  /api/BlogAdmin/Save:
    post:
      tags:
        - BlogAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Blog.Contracts.Models.BlogModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Blog.Contracts.Models.BlogModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Blog.Contracts.Models.BlogModel'
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: false
        right:
          - right_blog_admin
  '/api/Documents/{id}':
    get:
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: false
    delete:
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-System.Boolean'
            application/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-System.Boolean'
            text/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-System.Boolean'
      x-permissions:
        anonymous: false
        right:
          - right_lesson_admin
          - right_blog_admin
          - right_project_admin
  /api/Documents:
    post:
      tags:
        - Documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
            encoding:
              DocumentId:
                style: form
              DocumentKey:
                style: form
              DocumentName:
                style: form
              DocumentType:
                style: form
              DocumentSize:
                style: form
              DocumentRepository:
                style: form
              DocumentCategory:
                style: form
              CreatedOn:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.DocumentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.DocumentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.DocumentModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
      x-permissions:
        anonymous: false
        right:
          - right_lesson_admin
          - right_blog_admin
          - right_project_admin
  /api/Lesson/Lessons:
    post:
      tags:
        - Lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Lesson.Contracts.Models.Filters.LessonsFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Lesson.Contracts.Models.Filters.LessonsFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Lesson.Contracts.Models.Filters.LessonsFilter'
      responses:
        '200':
          description: Success
      deprecated: true
      x-permissions:
        anonymous: true
  '/api/Lesson/Slug/{id}':
    get:
      tags:
        - Lesson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: true
  '/api/Lesson/RecentLessons/{id}':
    get:
      tags:
        - Lesson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: true
  /api/Lesson/Query:
    post:
      tags:
        - Lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Eliassen.System.Linq.Search.SearchQuery-Nucleus.Lesson.Contracts.Models.LessonModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Eliassen.System.Linq.Search.SearchQuery-Nucleus.Lesson.Contracts.Models.LessonModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Lesson.Contracts.Models.LessonModel'
            application/json:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Lesson.Contracts.Models.LessonModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Lesson.Contracts.Models.LessonModel'
      x-permissions:
        anonymous: true
  /api/LessonAdmin/Lessons:
    post:
      tags:
        - LessonAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Lesson.Contracts.Models.Filters.LessonsFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Lesson.Contracts.Models.Filters.LessonsFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Lesson.Contracts.Models.Filters.LessonsFilter'
      responses:
        '200':
          description: Success
      deprecated: true
      x-permissions:
        anonymous: false
        right:
          - right_lesson_admin
  '/api/LessonAdmin/Lesson/{id}':
    get:
      tags:
        - LessonAdmin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: false
        right:
          - right_lesson_admin
  /api/LessonAdmin/Save:
    post:
      tags:
        - LessonAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Lesson.Contracts.Models.LessonModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Lesson.Contracts.Models.LessonModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Lesson.Contracts.Models.LessonModel'
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: false
        right:
          - right_lesson_admin
  /api/Project/Projects:
    post:
      tags:
        - Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Project.Contracts.Models.Filters.ProjectFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Project.Contracts.Models.Filters.ProjectFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Project.Contracts.Models.Filters.ProjectFilter'
      responses:
        '200':
          description: Success
      deprecated: true
      x-permissions:
        anonymous: false
  '/api/Project/Slug/{id}':
    get:
      tags:
        - Project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: false
  '/api/Project/RecentProjects/{id}':
    get:
      tags:
        - Project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: false
  /api/ProjectAdmin/Projects:
    post:
      tags:
        - ProjectAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Project.Contracts.Models.Filters.ProjectFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Project.Contracts.Models.Filters.ProjectFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Project.Contracts.Models.Filters.ProjectFilter'
      responses:
        '200':
          description: Success
      deprecated: true
      x-permissions:
        anonymous: false
        right:
          - right_project_admin
  '/api/ProjectAdmin/Project/{id}':
    get:
      tags:
        - ProjectAdmin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: false
        right:
          - right_project_admin
  /api/ProjectAdmin/Save:
    post:
      tags:
        - ProjectAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Project.Contracts.Models.ProjectModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Project.Contracts.Models.ProjectModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Project.Contracts.Models.ProjectModel'
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: false
        right:
          - right_project_admin
  /api/RegisterUser:
    post:
      tags:
        - RegisterUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.UserAction'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.UserAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.UserAction'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.User'
            application/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.User'
            text/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.User'
      x-permissions:
        anonymous: true
  /api/RegisterUser/ApplicationPermissions:
    get:
      tags:
        - RegisterUser
      parameters:
        - name: currentPage
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: '**Default size:** `10`, `-1` will disable paging'
          schema:
            type: integer
            description: '**Default size:** `10`, `-1` will disable paging'
            format: int32
        - name: excludePageCount
          in: query
          description: '`true` will disable row/page counts and may decrease processing time without effecting paging functions'
          schema:
            type: boolean
            description: '`true` will disable row/page counts and may decrease processing time without effecting paging functions'
        - name: searchTerm
          in: query
          description: '**Searched Properties:** ModuleId; Roles; Name; Code'
          schema:
            type: string
            description: '**Searched Properties:** ModuleId; Roles; Name; Code'
            nullable: true
        - name: orderBy.ModuleId
          in: query
          schema:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
        - name: orderBy.Roles
          in: query
          schema:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
        - name: orderBy.Name
          in: query
          schema:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
        - name: orderBy.Code
          in: query
          schema:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Core.Contracts.Models.Module'
            application/json:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Core.Contracts.Models.Module'
            text/json:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Core.Contracts.Models.Module'
      x-permissions:
        anonymous: true
  /api/RegisterUser/ApplicationPemissions:
    get:
      tags:
        - RegisterUser
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagedResult-Nucleus.Core.Contracts.Models.Module'
            application/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagedResult-Nucleus.Core.Contracts.Models.Module'
            text/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagedResult-Nucleus.Core.Contracts.Models.Module'
      deprecated: true
      x-permissions:
        anonymous: true
        right:
          - right_users_write
  /api/SiteMap:
    get:
      tags:
        - SiteMap
      responses:
        '200':
          description: Success
      x-permissions:
        anonymous: false
  /api/User:
    get:
      tags:
        - User
      summary: Get user profile for currently logged in user
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.User'
            application/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.User'
            text/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.User'
      x-permissions:
        anonymous: false
    put:
      tags:
        - User
      summary: Save user profile for current logged in user
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.User'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.User'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.User'
            application/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.User'
            text/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.User'
      x-permissions:
        anonymous: false
  /api/UserManagement:
    post:
      tags:
        - UserManagement
      summary: Save user profile
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.UserAction'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.UserAction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.UserAction'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.User'
            application/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.User'
            text/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.User'
      x-permissions:
        anonymous: false
        right:
          - right_users_write
  /api/UserManagement/Query:
    post:
      tags:
        - UserManagement
      summary: Query all user accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Eliassen.System.Linq.Search.SearchQuery-Nucleus.Core.Contracts.Models.User'
          text/json:
            schema:
              $ref: '#/components/schemas/Eliassen.System.Linq.Search.SearchQuery-Nucleus.Core.Contracts.Models.User'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Core.Contracts.Models.User'
            application/json:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Core.Contracts.Models.User'
            text/json:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Core.Contracts.Models.User'
      x-permissions:
        anonymous: false
        right:
          - right_users_write
  /api/UserManagement/ApplicationPermissions:
    get:
      tags:
        - UserManagement
      summary: Query all modules
      parameters:
        - name: currentPage
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: '**Default size:** `10`, `-1` will disable paging'
          schema:
            type: integer
            description: '**Default size:** `10`, `-1` will disable paging'
            format: int32
        - name: excludePageCount
          in: query
          description: '`true` will disable row/page counts and may decrease processing time without effecting paging functions'
          schema:
            type: boolean
            description: '`true` will disable row/page counts and may decrease processing time without effecting paging functions'
        - name: searchTerm
          in: query
          description: '**Searched Properties:** ModuleId; Roles; Name; Code'
          schema:
            type: string
            description: '**Searched Properties:** ModuleId; Roles; Name; Code'
            nullable: true
        - name: orderBy.ModuleId
          in: query
          schema:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
        - name: orderBy.Roles
          in: query
          schema:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
        - name: orderBy.Name
          in: query
          schema:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
        - name: orderBy.Code
          in: query
          schema:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Core.Contracts.Models.Module'
            application/json:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Core.Contracts.Models.Module'
            text/json:
              schema:
                $ref: '#/components/schemas/Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Core.Contracts.Models.Module'
      x-permissions:
        anonymous: false
        right:
          - right_users_write
  /api/UserManagement/UserList:
    post:
      tags:
        - UserManagement
      summary: Do not use for new development
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.Filters.UsersFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.Filters.UsersFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.Filters.UsersFilter'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagedResult-Nucleus.Core.Contracts.Models.User'
            application/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagedResult-Nucleus.Core.Contracts.Models.User'
            text/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagedResult-Nucleus.Core.Contracts.Models.User'
      deprecated: true
      x-permissions:
        anonymous: false
        right:
          - right_users_write
  /api/UserManagement/ApplicationPemissions:
    get:
      tags:
        - UserManagement
      summary: Do not use for new development
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagedResult-Nucleus.Core.Contracts.Models.Module'
            application/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagedResult-Nucleus.Core.Contracts.Models.Module'
            text/json:
              schema:
                $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagedResult-Nucleus.Core.Contracts.Models.Module'
      deprecated: true
      x-permissions:
        anonymous: false
        right:
          - right_users_write
components:
  schemas:
    Eliassen.System.Linq.Search.FilterParameter:
      type: object
      properties:
        eq:
          description: "`Equal To`: pass in the value to match for a given property  \r\n\r\nIf you are using string values you may also use wild cards  \r\n\\*bc -> Ends with  \r\n\\*b\\* -> Contains  \r\nab\\* -> Starts with"
          nullable: true
        neq:
          description: "`Not Equal To`: pass in the value to match for a given property  \r\n\r\nIf you are using string values you may also use wild cards  \r\n\\*bc -> Ends with  \r\n\\*b\\* -> Contains  \r\nab\\* -> Starts with"
          nullable: true
        in:
          type: array
          items: { }
          description: "This allows for providing a set of values where the value from the queries data must match at least \r\none of provided values"
          nullable: true
        gt:
          description: '`Greater than`'
          nullable: true
        gte:
          description: '`Greater than or equal to`'
          nullable: true
        lt:
          description: '`Less than`'
          nullable: true
        lte:
          description: '`Less than or equal to`'
          nullable: true
      additionalProperties: false
      description: Filter parameter
    Eliassen.System.Linq.Search.OrderDirections:
      enum:
        - asc
        - desc
      type: string
      description: Enumeration to control sort order
    Eliassen.System.Linq.Search.SearchQuery-Nucleus.Blog.Contracts.Models.BlogModel:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          description: '**Default size:** `10`, `-1` will disable paging'
          format: int32
        excludePageCount:
          type: boolean
          description: '`true` will disable row/page counts and may decrease processing time without effecting paging functions'
        searchTerm:
          type: string
          description: '**Searched Properties:** Title; Slug; Tags; Preview; Content; Enabled; Author; CreatedOn'
          nullable: true
        filter:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.FilterParameter'
          description: '**Filterable Properties:** BlogId; Title; Slug; Tags; Preview; Content; Enabled; Author; CreatedOn'
          nullable: true
        orderBy:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
          description: '**Sortable Properties:** BlogId, Title, Slug, Tags, Preview, Content, Enabled, Author, CreatedOn  **Default Order:** CreatedOn asc, Title asc'
          nullable: true
      additionalProperties: false
    Eliassen.System.Linq.Search.SearchQuery-Nucleus.Core.Contracts.Models.Module:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          description: '**Default size:** `10`, `-1` will disable paging'
          format: int32
        excludePageCount:
          type: boolean
          description: '`true` will disable row/page counts and may decrease processing time without effecting paging functions'
        searchTerm:
          type: string
          description: '**Searched Properties:** ModuleId; Roles; Name; Code'
          nullable: true
        filter:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.FilterParameter'
          description: '**Filterable Properties:** ModuleId; Roles; Name; Code'
          nullable: true
        orderBy:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
          description: '**Sortable Properties:** ModuleId, Roles, Name, Code  **Default Order:** Name asc'
          nullable: true
      additionalProperties: false
    Eliassen.System.Linq.Search.SearchQuery-Nucleus.Core.Contracts.Models.User:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          description: '**Default size:** `10`, `-1` will disable paging'
          format: int32
        excludePageCount:
          type: boolean
          description: '`true` will disable row/page counts and may decrease processing time without effecting paging functions'
        searchTerm:
          type: string
          description: '**Searched Properties:** FirstNameLastName; LastNameFirstName; EmailAddress; FirstName; LastName'
          nullable: true
        filter:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.FilterParameter'
          description: '**Filterable Properties:** FirstNameLastName; LastNameFirstName; UserId; UserName; EmailAddress; FirstName; LastName; Active; UserModules; CreatedOn; Module; UserStatus'
          nullable: true
        orderBy:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
          description: '**Sortable Properties:** FirstNameLastName, LastNameFirstName, UserId, UserName, EmailAddress, FirstName, LastName, Active, UserModules, CreatedOn  **Default Order:** LastName asc, FirstName asc, EmailAddress asc'
          nullable: true
      additionalProperties: false
    Eliassen.System.Linq.Search.SearchQuery-Nucleus.Lesson.Contracts.Models.LessonModel:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          description: '**Default size:** `10`, `-1` will disable paging'
          format: int32
        excludePageCount:
          type: boolean
          description: '`true` will disable row/page counts and may decrease processing time without effecting paging functions'
        searchTerm:
          type: string
          description: '**Searched Properties:** Title; MediaLink; Preview; PreviewImage; Slug; Content; Enabled; CreatedOn; CreatedOnUnix; Attendees; Teacher; Duration; StartDateTime; EndDateTime; Tags; Price; Goals; Notes'
          nullable: true
        filter:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.FilterParameter'
          description: '**Filterable Properties:** LessonId; Title; MediaLink; Preview; PreviewImage; Slug; Content; Enabled; CreatedOn; CreatedOnUnix; Attendees; Teacher; Duration; StartDateTime; EndDateTime; Tags; Price; Goals; Notes'
          nullable: true
        orderBy:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Eliassen.System.Linq.Search.OrderDirections'
          description: '**Sortable Properties:** LessonId, Title, MediaLink, Preview, PreviewImage, Slug, Content, Enabled, CreatedOn, CreatedOnUnix, Attendees, Teacher, Duration, StartDateTime, EndDateTime, Tags, Price, Goals, Notes  **Default Order:** CreatedOn asc, Slug asc'
          nullable: true
      additionalProperties: false
    Eliassen.System.ResponseModel.MessageLevels:
      enum:
        - trace
        - debug
        - info
        - warning
        - error
        - fatal
        - unknown
      type: string
      description: response message level
    Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Blog.Contracts.Models.BlogModel:
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Blog.Contracts.Models.BlogModel'
          nullable: true
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Eliassen.System.ResponseModel.ResultMessage'
          nullable: true
        currentPage:
          type: integer
          format: int32
          readOnly: true
        totalPageCount:
          type: integer
          format: int32
          readOnly: true
        totalRowCount:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Core.Contracts.Models.Module:
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.Module'
          nullable: true
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Eliassen.System.ResponseModel.ResultMessage'
          nullable: true
        currentPage:
          type: integer
          format: int32
          readOnly: true
        totalPageCount:
          type: integer
          format: int32
          readOnly: true
        totalRowCount:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Core.Contracts.Models.User:
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.User'
          nullable: true
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Eliassen.System.ResponseModel.ResultMessage'
          nullable: true
        currentPage:
          type: integer
          format: int32
          readOnly: true
        totalPageCount:
          type: integer
          format: int32
          readOnly: true
        totalRowCount:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    Eliassen.System.ResponseModel.PagedQueryResult-Nucleus.Lesson.Contracts.Models.LessonModel:
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Lesson.Contracts.Models.LessonModel'
          nullable: true
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Eliassen.System.ResponseModel.ResultMessage'
          nullable: true
        currentPage:
          type: integer
          format: int32
          readOnly: true
        totalPageCount:
          type: integer
          format: int32
          readOnly: true
        totalRowCount:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    Eliassen.System.ResponseModel.ResultMessage:
      type: object
      properties:
        level:
          $ref: '#/components/schemas/Eliassen.System.ResponseModel.MessageLevels'
        message:
          type: string
          description: Simple English message about issue.
          nullable: true
        messageCode:
          type: string
          description: unique code that may be used to assist in translating issue
          nullable: true
        context:
          type: string
          description: Property or path related to this message
          nullable: true
        metaData:
          description: additional properties related to response
          nullable: true
      additionalProperties: false
      description: additional details about response
    Microsoft.AspNetCore.Mvc.ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    Nucleus.Blog.Contracts.Models.BlogModel:
      type: object
      properties:
        blogId:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        preview:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        enabled:
          type: boolean
          nullable: true
        author:
          type: string
          nullable: true
        createdOn:
          type: string
          format: date-time
      additionalProperties: false
    Nucleus.Blog.Contracts.Models.Filters.BlogsFilter:
      type: object
      properties:
        blogFilters:
          $ref: '#/components/schemas/Nucleus.Blog.Contracts.Models.Filters.BlogsFilterItem'
        pagingModel:
          $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagingModel'
      additionalProperties: false
    Nucleus.Blog.Contracts.Models.Filters.BlogsFilterItem:
      type: object
      properties:
        inputValue:
          type: string
          nullable: true
      additionalProperties: false
    Nucleus.Core.Contracts.Models.DocumentModel:
      type: object
      properties:
        documentId:
          type: string
          nullable: true
        documentKey:
          type: string
          nullable: true
        documentName:
          type: string
          nullable: true
        documentType:
          type: string
          nullable: true
        documentSize:
          type: integer
          format: int64
          nullable: true
        documentRepository:
          type: string
          nullable: true
        documentCategory:
          type: string
          nullable: true
        createdOn:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    Nucleus.Core.Contracts.Models.Filters.UserFilterItem:
      type: object
      properties:
        inputValue:
          type: string
          nullable: true
        module:
          type: string
          nullable: true
        userStatus:
          type: string
          nullable: true
      additionalProperties: false
    Nucleus.Core.Contracts.Models.Filters.UsersFilter:
      type: object
      properties:
        userFilters:
          $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.Filters.UserFilterItem'
        pagingModel:
          $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagingModel'
      additionalProperties: false
    Nucleus.Core.Contracts.Models.Module:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        moduleId:
          type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.Role'
          nullable: true
      additionalProperties: false
    Nucleus.Core.Contracts.Models.PagedResult-Nucleus.Core.Contracts.Models.Module:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        firstRowOnPage:
          type: integer
          format: int32
          readOnly: true
        lastRowOnPage:
          type: integer
          format: int32
          readOnly: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.Module'
          nullable: true
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.Module'
          nullable: true
          readOnly: true
        totalPageCount:
          type: integer
          format: int32
          readOnly: true
        totalRowCount:
          type: integer
          format: int32
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Eliassen.System.ResponseModel.ResultMessage'
          nullable: true
          readOnly: true
      additionalProperties: false
    Nucleus.Core.Contracts.Models.PagedResult-Nucleus.Core.Contracts.Models.User:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        firstRowOnPage:
          type: integer
          format: int32
          readOnly: true
        lastRowOnPage:
          type: integer
          format: int32
          readOnly: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.User'
          nullable: true
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.User'
          nullable: true
          readOnly: true
        totalPageCount:
          type: integer
          format: int32
          readOnly: true
        totalRowCount:
          type: integer
          format: int32
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Eliassen.System.ResponseModel.ResultMessage'
          nullable: true
          readOnly: true
      additionalProperties: false
    Nucleus.Core.Contracts.Models.PagingModel:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        sortBy:
          type: string
          nullable: true
        sortDirection:
          type: string
          nullable: true
        excludePageCount:
          type: boolean
          readOnly: true
      additionalProperties: false
    Nucleus.Core.Contracts.Models.PermissionBase:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.DocumentModel:
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          type: string
          nullable: true
        response:
          $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.DocumentModel'
      additionalProperties: false
    Nucleus.Core.Contracts.Models.ResponseModel-Nucleus.Core.Contracts.Models.User:
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          type: string
          nullable: true
        response:
          $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.User'
      additionalProperties: false
    Nucleus.Core.Contracts.Models.ResponseModel-System.Boolean:
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          type: string
          nullable: true
        response:
          type: boolean
      additionalProperties: false
    Nucleus.Core.Contracts.Models.Role:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        rights:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PermissionBase'
          nullable: true
      additionalProperties: false
    Nucleus.Core.Contracts.Models.User:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        active:
          type: boolean
        userModules:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.UserModule'
          nullable: true
        createdOn:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    Nucleus.Core.Contracts.Models.UserAction:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        active:
          type: boolean
        userModules:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.UserModule'
          nullable: true
        createdOn:
          type: string
          format: date-time
          nullable: true
        identityAction:
          type: string
          nullable: true
      additionalProperties: false
    Nucleus.Core.Contracts.Models.UserModule:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.Role'
          nullable: true
      additionalProperties: false
    Nucleus.Lesson.Contracts.Models.Filters.LessonsFilter:
      type: object
      properties:
        lessonFilters:
          $ref: '#/components/schemas/Nucleus.Lesson.Contracts.Models.Filters.LessonsFilterItem'
        pagingModel:
          $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagingModel'
      additionalProperties: false
    Nucleus.Lesson.Contracts.Models.Filters.LessonsFilterItem:
      type: object
      properties:
        inputValue:
          type: string
          nullable: true
      additionalProperties: false
    Nucleus.Lesson.Contracts.Models.LessonModel:
      type: object
      properties:
        lessonId:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        mediaLink:
          type: string
          nullable: true
        preview:
          type: string
          nullable: true
        previewImage:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        enabled:
          type: boolean
          nullable: true
        createdOn:
          type: string
          format: date-time
          nullable: true
        createdOnUnix:
          type: integer
          format: int64
        attendees:
          type: array
          items:
            type: string
          nullable: true
        teacher:
          type: string
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        startDateTime:
          type: string
          format: date-time
          nullable: true
        endDateTime:
          type: string
          format: date-time
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        price:
          type: number
          format: double
        goals:
          type: array
          items:
            type: string
          nullable: true
        notes:
          type: string
          nullable: true
      additionalProperties: false
    Nucleus.Project.Contracts.Models.Filters.ProjectFilter:
      type: object
      properties:
        projectFilters:
          $ref: '#/components/schemas/Nucleus.Project.Contracts.Models.Filters.ProjectsFilterItem'
        pagingModel:
          $ref: '#/components/schemas/Nucleus.Core.Contracts.Models.PagingModel'
      additionalProperties: false
    Nucleus.Project.Contracts.Models.Filters.ProjectsFilterItem:
      type: object
      properties:
        inputValue:
          type: string
          nullable: true
      additionalProperties: false
    Nucleus.Project.Contracts.Models.ProjectModel:
      type: object
      properties:
        projectId:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        projectLink:
          type: string
          nullable: true
        projectImage:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        preview:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        page:
          type: string
          nullable: true
        enabled:
          type: boolean
          nullable: true
        createdOn:
          type: string
          format: date-time
      additionalProperties: false
  securitySchemes:
    oauth2:
      type: oauth2
      description: B2C authentication
      flows:
        implicit:
          authorizationUrl: https://lightwellnucleusdev.b2clogin.com/lightwellnucleusdev.onmicrosoft.com/oauth2/v2.0/authorize?p=B2C_1_NucAcc_Signin
          tokenUrl: https://lightwellnucleusdev.b2clogin.com/lightwellnucleusdev.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_NucAcc_Signin
          scopes:
            https://lightwellnucleusdev.onmicrosoft.com/user.read/read: UserReadApiClaim
security:
  - oauth2: [ ]