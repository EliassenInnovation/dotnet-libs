<Project>

	<!-- 
	when `dotnet clear` is not clean enough... 
	`dotnet clean /T:DeepClean` ensures all of the build and intermediate files are removed 
	-->
	<Target Name="DeepClean">
		<Message Text="===== Really cleaning project: $(Configuration) - &quot;$(MSBuildProjectName)&quot;"  Importance="high"/>
		<RemoveDir Directories="$(BaseIntermediateOutputPath)" ContinueOnError="true" />
		<MakeDir Directories="$(BaseIntermediateOutputPath)" ContinueOnError="true" />
		<RemoveDir Directories="$(BaseOutputPath)" ContinueOnError="true" />
		<MakeDir Directories="$(BaseOutputPath)" ContinueOnError="true" />
	</Target>

	<Target Name="GetDocumentation" Condition="'@(CodeDocumentation)' != ''">
		<!--AfterTargets="PostBuildEvent"-->
		<Message Text="===== Get Documentation: $(Configuration) - &quot;$(MSBuildProjectName)&quot;"  Importance="high"/>
		<RemoveDir Directories="$(CodeDocumentPath)$(MSBuildProjectName)" ContinueOnError="true" />
		<Message Text="CodeDocumentation: @(CodeDocumentation) -> $(CodeDocumentPath)$(MSBuildProjectName)"  Importance="high"/>
		<Copy SourceFiles="@(CodeDocumentation)" DestinationFolder="$(CodeDocumentPath)$(MSBuildProjectName)" />
	</Target>

	<!-- Ensure the PackageReadmeFile is included with the projects to be packaged for nuget -->
	<Target Name="CheckReadMe" Condition="'$(IsPackable)'=='true' and '$(PackageReadmeFile)'==''" BeforeTargets="Build">
		<Warning Text="No PackageReadmeFile included for &quot;$(MSBuildProjectName)&quot;"
				 Code="ELIPK001" />
	</Target>
	<Target Name="CheckReadMeExists" Condition="'$(PackageReadmeFile)'!='' and !Exists('$(PackageReadmeFile)')" BeforeTargets="Build">
		<Error Text="&quot;$(PackageReadmeFile)&quot; missing from &quot;$(MSBuildProjectName)&quot;"
			   Code="ELIPK002" />
	</Target>

</Project>